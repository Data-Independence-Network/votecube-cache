use common::model::response::RESPONSE_INVALID_DATA_FORMAT_FLAG;
use common::model::response::RESPONSE_INVALID_FLAG;
use common::model::response::RESPONSE_INVALID_GLOBAL_CATEGORY_ID_FLAG;
use common::model::response::RESPONSE_INVALID_CATEGORY_CACHE_INDEX_FLAG;
use common::model::response::RESPONSE_INVALID_GLOBAL_LOCATION_ID_FLAG;
use common::model::response::RESPONSE_INVALID_LOCATION_CACHE_INDEX_FLAG;
use common::model::response::RESPONSE_INVALID_PERIOD_ID_FLAG;
use common::model::response::RESPONSE_INVALID_TIMEZONE_ID_FLAG;

pub static mut INVALID_DATA_FORMAT_RESPONSE: Vec<u8> = Vec::with_capacity(1);
pub static mut INVALID_GLOBAL_CATEGORY_ID_RESPONSE: Vec<u8> = Vec::with_capacity(1);
pub static mut INVALID_CATEGORY_CACHE_INDEX_RESPONSE: Vec<u8> = Vec::with_capacity(1);
pub static mut INVALID_GLOBAL_LOCATION_ID_RESPONSE: Vec<u8> = Vec::with_capacity(1);
pub static mut INVALID_LOCATION_CACHE_INDEX_RESPONSE: Vec<u8> = Vec::with_capacity(1);
pub static mut INVALID_PERIOD_ID_RESPONSE: Vec<u8> = Vec::with_capacity(1);
pub static mut INVALID_TIMEZONE_ID_RESPONSE: Vec<u8> = Vec::with_capacity(1);

pub fn setup_response_headers() {
    INVALID_DATA_FORMAT_RESPONSE.push(RESPONSE_INVALID_FLAG + RESPONSE_INVALID_DATA_FORMAT_FLAG);
    INVALID_GLOBAL_CATEGORY_ID_RESPONSE.push(RESPONSE_INVALID_FLAG + RESPONSE_INVALID_GLOBAL_CATEGORY_ID_FLAG);
    INVALID_CATEGORY_CACHE_INDEX_RESPONSE.push(RESPONSE_INVALID_FLAG + RESPONSE_INVALID_CATEGORY_CACHE_INDEX_FLAG);
    INVALID_GLOBAL_LOCATION_ID_RESPONSE.push(RESPONSE_INVALID_FLAG + RESPONSE_INVALID_GLOBAL_LOCATION_ID_FLAG);
    INVALID_LOCATION_CACHE_INDEX_RESPONSE.push(RESPONSE_INVALID_FLAG + RESPONSE_INVALID_LOCATION_CACHE_INDEX_FLAG);
    INVALID_PERIOD_ID_RESPONSE.push(RESPONSE_INVALID_FLAG + RESPONSE_INVALID_PERIOD_ID_FLAG);
    INVALID_TIMEZONE_ID_RESPONSE.push(RESPONSE_INVALID_FLAG + RESPONSE_INVALID_TIMEZONE_ID_FLAG);
}



